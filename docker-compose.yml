services:
  celery:
    build:
      context: ./
      dockerfile: Dockerfile
    image: custom_celery
    container_name: "custom_celery"
    restart: unless-stopped
    ports:
      - "2182:2182"
    environment:
      BROKER_URL: amqp://admin:${RABBITMQ_PASSWORD}@celery-broker:5672//
    networks:
      - celery-net
    depends_on:
      - celery-broker
      - kafka
      - zookeeper
    command: ["celery", "-A", "tasks", "worker", "-l", "INFO"]

  celery-broker:
    image: rabbitmq:4.0.9-alpine
    container_name: "celery-broker"
    restart: unless-stopped
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - celery-net

  zookeeper:
    image: ${ZK_IMAGE:-zookeeper:3.9.2}
    container_name: "zookeeper"
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - celery-net
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  kafka:
    image: ${KAFKA_IMAGE:-bitnami/kafka:3.6}
    container_name: "kafka"
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181/kafka'
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_HOST_NAME: 'kafka'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - celery-net
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions.sh -bootstrap-server kafka:9092" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    deploy:
      replicas: ${KAFKA_REPLICAS:-0}  # Default to 0, meaning Kafka won't start unless KAFKA_REPLICAS is set

  kafka-ui:
    image: ${KAFKA_UI_IMAGE:-provectuslabs/kafka-ui:latest}
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_UI_AUTH_ENABLED: 'false'
      DYNAMIC_CONFIG_ENABLED: 'false'
    networks:
      - celery-net

networks:
  celery-net:
    name: celery-net
    driver: bridge